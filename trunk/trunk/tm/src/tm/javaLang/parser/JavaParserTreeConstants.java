/* Generated By:JavaCC: Do not edit this line. JavaParserTreeConstants.java Version 5.0 */
package tm.javaLang.parser;

public interface JavaParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTOPTPACKAGEDECLARATION = 1;
  public int JJTIMPORTDECLARATIONS = 2;
  public int JJTIMPORTDECLARATION = 3;
  public int JJTVOID = 4;
  public int JJTUNMODIFIEDCLASSDECLARATION = 5;
  public int JJTOPTCLASSEXTENDSCLAUSE = 6;
  public int JJTOPTIMPLEMENTSCLAUSE = 7;
  public int JJTCLASSBODY = 8;
  public int JJTUNMODIFIEDINTERFACEDECLARATION = 9;
  public int JJTINTERFACEBODY = 10;
  public int JJTOPTINTERFACEEXTENDSCLAUSE = 11;
  public int JJTVARIABLEDECLARATOR = 12;
  public int JJTVARIABLEINITIALIZER = 13;
  public int JJTARRAYINITIALIZER = 14;
  public int JJTCONSTRUCTORDECLARATION = 15;
  public int JJTCONSTRUCTORDECLARATOR = 16;
  public int JJTOPTTHROWSCLAUSE = 17;
  public int JJTMETHODDECLARATION = 18;
  public int JJTMETHODDECLARATOR = 19;
  public int JJTFORMALPARAMETERS = 20;
  public int JJTFORMALPARAMETER = 21;
  public int JJTCONSTRUCTORBODY = 22;
  public int JJTTHISEXPLICITCONSTRUCTORINVOCATION = 23;
  public int JJTSUPEREXPLICITCONSTRUCTORINVOCATION = 24;
  public int JJTMETHODBODY = 25;
  public int JJTINITIALIZERBLOCK = 26;
  public int JJTNAMENODE = 27;
  public int JJTBINOP = 28;
  public int JJTCONDITIONAL = 29;
  public int JJTINSTANCEOF = 30;
  public int JJTUNARY_PREFIX = 31;
  public int JJTCASTEXPRESSION = 32;
  public int JJTUNARY_POSTFIX = 33;
  public int JJTEXPRESSIONNAME = 34;
  public int JJTPARENS = 35;
  public int JJTSUBSCRIPT = 36;
  public int JJTQUALIFIEDALLOCATIONEXPRESSION = 37;
  public int JJTTHISEXP = 38;
  public int JJTSUPERMETHODCALL = 39;
  public int JJTSUPEREXP = 40;
  public int JJTCLASSEXP = 41;
  public int JJTMETHODNAMECALL = 42;
  public int JJTMETHODCALL = 43;
  public int JJTFIELDACCESS = 44;
  public int JJTLITERAL = 45;
  public int JJTARGUMENTS = 46;
  public int JJTALLOCATIONEXPRESSION = 47;
  public int JJTARRAYDIMSANDINITS = 48;
  public int JJTLABELEDSTATEMENT = 49;
  public int JJTBLOCK = 50;
  public int JJTEMPTYSTATEMENT = 51;
  public int JJTEXPRESSIONSTATEMENT = 52;
  public int JJTASSERTSTATEMENT = 53;
  public int JJTSWITCHSTATEMENT = 54;
  public int JJTCASE = 55;
  public int JJTSWITCHLABEL = 56;
  public int JJTIFSTATEMENT = 57;
  public int JJTWHILESTATEMENT = 58;
  public int JJTDOSTATEMENT = 59;
  public int JJTFORSTATEMENT = 60;
  public int JJTOPTFORINIT = 61;
  public int JJTFORINIT = 62;
  public int JJTOPTEXPRESSION = 63;
  public int JJTOPTFORUPDATE = 64;
  public int JJTBREAKSTATEMENT = 65;
  public int JJTCONTINUESTATEMENT = 66;
  public int JJTRETURNSTATEMENT = 67;
  public int JJTTHROWSTATEMENT = 68;
  public int JJTSYNCHRONIZEDSTATEMENT = 69;
  public int JJTTRYSTATEMENT = 70;
  public int JJTCATCHES = 71;
  public int JJTCATCH = 72;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "OptPackageDeclaration",
    "ImportDeclarations",
    "ImportDeclaration",
    "void",
    "UnmodifiedClassDeclaration",
    "OptClassExtendsClause",
    "OptImplementsClause",
    "ClassBody",
    "UnmodifiedInterfaceDeclaration",
    "InterfaceBody",
    "OptInterfaceExtendsClause",
    "VariableDeclarator",
    "VariableInitializer",
    "ArrayInitializer",
    "ConstructorDeclaration",
    "ConstructorDeclarator",
    "OptThrowsClause",
    "MethodDeclaration",
    "MethodDeclarator",
    "FormalParameters",
    "FormalParameter",
    "ConstructorBody",
    "ThisExplicitConstructorInvocation",
    "SuperExplicitConstructorInvocation",
    "MethodBody",
    "InitializerBlock",
    "NameNode",
    "BinOp",
    "Conditional",
    "InstanceOf",
    "Unary_prefix",
    "CastExpression",
    "Unary_postfix",
    "ExpressionName",
    "Parens",
    "Subscript",
    "QualifiedAllocationExpression",
    "ThisExp",
    "SuperMethodCall",
    "SuperExp",
    "ClassExp",
    "MethodNameCall",
    "MethodCall",
    "FieldAccess",
    "Literal",
    "Arguments",
    "AllocationExpression",
    "ArrayDimsAndInits",
    "LabeledStatement",
    "Block",
    "EmptyStatement",
    "ExpressionStatement",
    "AssertStatement",
    "SwitchStatement",
    "Case",
    "SwitchLabel",
    "IfStatement",
    "WhileStatement",
    "DoStatement",
    "ForStatement",
    "OptForInit",
    "ForInit",
    "OptExpression",
    "OptForUpdate",
    "BreakStatement",
    "ContinueStatement",
    "ReturnStatement",
    "ThrowStatement",
    "SynchronizedStatement",
    "TryStatement",
    "Catches",
    "Catch",
  };
}
/* JavaCC - OriginalChecksum=3544454f2956401539562a4f1439d736 (do not edit this line) */
