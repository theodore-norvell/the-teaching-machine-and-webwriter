<!-- InstanceBegin template="/Templates/reference.dwt" codeOutsideHTMLIsLocked="false" --><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html401/sgml/dtd.html"><head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<!-- InstanceBeginEditable name="doctitle" -->
<title>Reference Guide Help</title>
<script language="JavaScript">
nestingDepth = "../../";
</script>
<!-- InstanceEndEditable -->
<!-- these are relative to template -->
<script language="JavaScript" src="../noteConstants.js"></script>
<script language="JavaScript" src="../../webWriter/defHeader.js"></script>
</head>
<body>

<script language="javascript">
	document.write('<div id="navBar">');
		document.write('<div id="refContainer"><span class="navText">' + courseNo + ' Reference Pages </span></div>');
		document.write('<div id="titleContainer"><span class="navText">');
			document.write(document.title);
		document.write('</span></div>');
		document.write('<div id="buttonContainer">');
			document.write('<button id = "TOC" type="button" onClick="loadTOC();" title="load Table of Contents">TOC</button>');
			document.write('<button id = "help" type="button" onClick="getHelp();" title="Help not yet hooked in.">help</button>');
		document.write('</div>');
		document.write('<div id="siteContainer"><span class="navText">' + organization + '</span></div>');
	document.write('</div>');
	
function loadTOC(){
	location = "languageRef.htm";
}

function getHelp(){
	document.defaultView.open("helpReference.htm");
}


	</script>
<div id="contents">
<!-- InstanceBeginEditable name="contents" -->

<h3>Syntax</h3>
<p>The syntax definitions define what elements must be present to form a proper C++ statement. The key is as follows:</p>
<p><span class="codeRequired">Keywords:</span><span class="codeKeyword"> if&nbsp;&nbsp;&nbsp;double&nbsp;&nbsp;&nbsp;void</span></p>
<blockquote>
  <p>Keywords form the vocabulary of C++ and must appear exactly as typed.</p>
  </blockquote>
<p><b>Other Required Elements: { } ; () </b></p>
<blockquote>
  <p>These  elements must also appear exactly as typed.</p>
  </blockquote>
<p><b>Structural elements:</b> <em>statement&nbsp;&nbsp;&nbsp;body&nbsp;&nbsp;&nbsp;expression&nbsp;&nbsp;&nbsp;condition </em></p>
<blockquote>
  <p>These represent what are technically called non-terminal elements&#8212;that is, elements made up of basic components. Generally, replaced by your code carring out the indicated function, for example <code>a &lt; 10</code> could be used as a <em>condition</em> </p>
</blockquote>
<h3>Example</h3>
<div class="syntaxDef"><p class="code"><span class="codeKeyword"> if </span><span class="codeRequired">(</span><em>condition</em><span class="codeRequired">)</span></p>
<p class="code"> &nbsp;&nbsp;&nbsp;<em>statement</em></p>
</div>
<p>defines the form for a properly created if statement.</p>
<div class="syntaxDef">
  <p class="code"><span class="codeKeyword"> if </span><span class="codeRequired">(</span>x &lt; 0 <span class="codeRequired">)</span></p>
  <p class="code"> &nbsp;&nbsp;&nbsp;cout &lt;&lt; &quot;x is negative.&quot; &lt;&lt; endl; </p>
</div>
<p>satisfies it because the <span class="codeKeyword">if</span> and <span class="codeRequired">( )</span> appear exactly as typed, <code>x &lt; 0</code> is a well-formed condition and</p>
<blockquote>
  <p> <code>cout &lt;&lt; &quot;x is negative.&quot; &lt;&lt; endl;</code></p>
  </blockquote>
<p>is a well formed statement.</p>
<!-- InstanceEndEditable -->
</div>
</body>
<!-- InstanceEnd --></html>

