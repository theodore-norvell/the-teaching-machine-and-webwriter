<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html401/sgml/dtd.html">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<script language="JavaScript">
nestingDepth = "";
</script>
<script language="JavaScript" src="content/noteConstants.js"></script>
<script language="JavaScript" src="webWriter/web_writer.js"></script>
<script language="JavaScript" src="webWriter/tocNavigator.js"></script>
<script language="JavaScript" src="content/nav-map.js"></script>
<script language="JavaScript" src="webWriter/header.js"></script>
<title>index</title>
</head>
<body>
<script language="JavaScript">

var tocWalker = new Walker(root);
var level = 0;

while (tocWalker.current != null) {
	buildIndexTable(tocWalker);
	tocWalker.walk();
}

for(var i = 0; i < indexTable.length; i++)
	writeEntry(i);

/* actually the needed routine is the equivalent to setAnchors in TOC
my thought was to use spot anchors with a class set to "index" (if that's allowed
for anchors, then an HTML comment after it with the primary and secondary index strings in the comment
as <a name="indexI"></a> <---- primary="variable" secondary="local, inside a function" -->
This entry would be added to the index table under which would be structured as indexTable[primary][secondary]
and each entry would be a list of page anchors*/
*/

function buildIndexTable(tocWalker){
	var thePage = new HtmlDoc(fileToString(tocWalker.current.doc));
//	alert("thePage is " + thePage);
	document.write(thePage.title);
	document.write('</a> </li>');
	setAnchors(thePage);
	if (thePage.anchors.length > 0) {
		document.write('<ol>');
		for (var i = 0; i < thePage.anchors.length; i++) {
			document.write('<li><a href="', tocWalker.current.doc, '#', thePage.anchors[i].name, '">');
			document.write(thePage.anchors[i].entry);
			document.write('</a> </li>');
		}
		document.write('</ol>');
	}
}

/****** HtmlDoc Class *******************************************/

function HtmlDoc(docString){
	this.docString = docString;
	this.title = getTitle(docString);
	this.anchors = new Array();
}

function getTitle(docString){
	if (docString == null) return "";
	var pos = docString.search(/\<\s*title\s*\>/i);
	if (pos == -1) return "";
	var truncated = docString.substr(pos);
	truncated = truncated.substr(truncated.search(/\>/) + 1);
//	alert("truncated is " + truncated);
	pos = truncated.search(/\</);
	if (pos == -1) return "";  // malformed document
	return truncated.slice(0,pos);
}

function setAnchors(page){
	//alert("setting anchors on page " + page.title);
	if (!page || !page.docString) return;
	var anchorStart = /\<\s*a\s+name\s*\=/;
	var anchorNo = 0;
	var pos = page.docString.search(anchorStart);
	var theRest = page.docString.substr(pos);
	while (pos > -1) {
		theRest = theRest.substr(theRest.search(/"/) +1);	// move to the anchor name
		pos = theRest.search(/"/);		// Find end of name
		var name = theRest.slice(0,pos);
		theRest = theRest.substr(theRest.search(/\>/) + 1);	// move to after the anchor
		pos = theRest.search(/\</);
		var entry = theRest.slice(0,pos);  // extract the entry
		if (entry != "") {
			page.anchors[anchorNo] = new Anchor();
			page.anchors[anchorNo].name = name;
			page.anchors[anchorNo++].entry = entry;
		}
		pos = theRest.search(anchorStart); // move to the next anchor
		theRest = theRest.substr(pos);
//		alert(theRest);
	}
}

function Anchor(){
	this.name = null;
	this.entry = null;
}

</script>
  <p>
  <script language="JavaScript">
<!--
dateStamp();
//retrieveSource();
-->
  </script>
</p>
</body>
</html>
