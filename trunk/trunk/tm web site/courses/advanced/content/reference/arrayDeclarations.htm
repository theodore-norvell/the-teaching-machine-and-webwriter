<!-- InstanceBegin template="/Templates/reference.dwt" codeOutsideHTMLIsLocked="false" --><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html401/sgml/dtd.html"><head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<!-- InstanceBeginEditable name="doctitle" -->
<title>Array Declarations</title>
<script language="JavaScript">
nestingDepth = "../../";
</script>
<!-- InstanceEndEditable -->
<!-- these are relative to template -->
<script language="JavaScript" src="../noteConstants.js"></script>
<script language="JavaScript" src="../../webWriter/defHeader.js"></script>
</head>
<body>

<script language="javascript">
	document.write('<div id="navBar">');
		document.write('<div id="refContainer"><span class="navText">' + courseNo + ' Reference Pages </span></div>');
		document.write('<div id="titleContainer"><span class="navText">');
			document.write(document.title);
		document.write('</span></div>');
		document.write('<div id="buttonContainer">');
			document.write('<button id = "TOC" type="button" onClick="loadTOC();" title="load Table of Contents">TOC</button>');
			document.write('<button id = "help" type="button" onClick="getHelp();" title="Help not yet hooked in.">help</button>');
		document.write('</div>');
		document.write('<div id="siteContainer"><span class="navText">' + organization + '</span></div>');
	document.write('</div>');
	
function loadTOC(){
	location = "languageRef.htm";
}

function getHelp(){
	document.defaultView.open("helpReference.htm");
}


	</script>
<div id="contents">
<!-- InstanceBeginEditable name="contents" -->

<h3>Syntax</h3>
<p>Array declaration </p>
<div class="syntaxDef">
  <p class="code"><em>type arrayName</em><span class="codeRequired">[</span><em>size</em><span class="codeRequired">];</span></p>
  </div>
<p>or</p>
<div class="syntaxDef">
  <p class="code"><em>type arrayName</em><span class="codeRequired">[</span><em>size</em><span class="codeRequired">] = {</span><em>initializerList</em><span class="codeRequired">};</span></p>
  </div>
<p>where <em>type</em> is a standard type, <em>arrayName</em> is the programmer chosen name for the array, <em>size</em> is a <em>constant expression</em>, that is, an <em>expression</em> known at compile time.</p>
<p><em>initializerList</em> is a comma separated list of zero or more initializer values. The number of values must be equal to or less than the <em>size</em> of the array.</p>
<h3>Examples</h3>
<p>The following are valid array declarations: </p>
<div class="syntaxDef">
  <p class="code"><span class="codeKeyword"> double </span>values<span class="codeRequired">[</span>20<span class="codeRequired">];</span></p>
  <p class="code"><span class="codeKeyword">const</span> int CLASS_SIZE = 20; </p>
  <p class="code"><span class="codeKeyword">int </span>grades<span class="codeRequired">[</span>CLASS_SIZE<span class="codeRequired">];</span></p>
  <p class="code"><span class="codeKeyword">int </span>labMarks<span class="codeRequired">[</span>5*CLASS_SIZE<span class="codeRequired">];</span></p>
  <p class="code"><span class="codeKeyword">double</span> 3DPoint<span class="codeRequired">[</span>3<span class="codeRequired">] = {</span>-1.0, 2.4, 4.1<span class="codeRequired">};</span></p>
  <p class="code"><span class="codeKeyword">double</span> 2DPoint<span class="codeRequired">[</span>3<span class="codeRequired">] = {</span>-1.0, 2.4<span class="codeRequired">};</span>  </p>
  <p class="code"> </span></p>
</div>
<p>All array sizes are known at compile time (because <code>CLASS_SIZE</code> is constant). Even though <code>2DPoint</code> has a size of <code>3</code>, it is still valid to initialize only 2 values (they will be the first two). </p>
<p>The following are <strong>not</strong> valid array declarations: </p>
<div class="syntaxDef">
  <p class="code"><span class="codeKeyword"> </span>int classSize = 20; </p>
  <p class="code"><span class="codeKeyword">int </span>grades<span class="codeRequired">[</span>classSize<span class="codeRequired">];</span></p>
  <p class="code"><span class="codeKeyword">double</span> 4DPoint<span class="codeRequired">[</span>3<span class="codeRequired">] = {</span>-1.0, 2.4, 4.1, 3.3<span class="codeRequired">};</span> </p>
  <p class="code"> </p>
</div>
<p>Since <code>classSize</code> was not declared <span class="codeKeyword">const</span>, it is formally a variable and thus could vary at run time. Thus using it to specify the <em>size</em> of the <code>grades</code> array is a syntax error.</p>
<p><code>4DPoint</code> only has a <em>size</em> of <code>3</code> so using an <em>initializerList</em> of length 4 is also a syntax error.</p>
<!-- InstanceEndEditable -->
</div>
</body>
<!-- InstanceEnd --></html>

