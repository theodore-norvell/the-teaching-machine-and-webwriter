<!-- InstanceBegin template="/Templates/reference.dwt" codeOutsideHTMLIsLocked="false" --><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html401/sgml/dtd.html"><head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<!-- InstanceBeginEditable name="doctitle" -->
<title>call by reference</title>
<script language="JavaScript">
nestingDepth = "../../";
</script>
<!-- InstanceEndEditable -->
<!-- these are relative to template -->
<script language="JavaScript" src="../noteConstants.js"></script>
<script language="JavaScript" src="../../webWriter/defHeader.js"></script>
</head>
<body>

<script language="javascript">
	document.write('<div id="navBar">');
		document.write('<div id="refContainer"><span class="navText">' + courseNo + ' Reference Pages </span></div>');
		document.write('<div id="titleContainer"><span class="navText">');
			document.write(document.title);
		document.write('</span></div>');
		document.write('<div id="buttonContainer">');
			document.write('<button id = "TOC" type="button" onClick="loadTOC();" title="load Table of Contents">TOC</button>');
			document.write('<button id = "help" type="button" onClick="getHelp();" title="Help not yet hooked in.">help</button>');
		document.write('</div>');
		document.write('<div id="siteContainer"><span class="navText">' + organization + '</span></div>');
	document.write('</div>');
	
function loadTOC(){
	location = "languageRef.htm";
}

function getHelp(){
	document.defaultView.open("helpReference.htm");
}


	</script>
<div id="contents">
<!-- InstanceBeginEditable name="contents" -->

<h3>Syntax</h3>
<div class="syntaxDef">
  <p class="code"><em>functionName</em><span class="codeRequired"> (</span><em>variablesList</em><span class="codeRequired">);</span></p>
  </div>
<p><em>variableList</em> is a comma-separated list of zero or more <em>variables</em>. The number of variables must equal the number of parameters in the <a href="functionDeclaration.htm">function declaration</a> and the type of each variable result must be the same as (or unambiguously convertible to) the type of the equivalent parameter in the function declaration. The function call can be emebedded in an expression.</p>
<p>Functions must be declared in a file before they can be called. </p>
<h3>Examples</h3>
<p>For the following declarations </p>
<div class="syntaxDef">
  <p class="code"><span class="codeKeyword"> void </span>toPolar<span class="codeRequired">(</span><span class="codeKeyword">double</span> x<span class="codeRequired">,</span><span class="codeKeyword">double</span> y<span class="codeRequired">,</span><span class="codeKeyword">double</span><span class="codeRequired">&amp;</span> mag, <span class="codeKeyword">double</span><span class="codeRequired">&amp;</span> angle<span class="codeRequired">);</span></span></p>
  <p class="code"><span class="codeKeyword">void </span>swap<span class="codeRequired">(</span><span class="codeKeyword">double</span><span class="codeRequired">&amp;</span> a1<span class="codeRequired">, </span><span class="codeKeyword">double</span><span class="codeRequired">&amp;</span> a2<span class="codeRequired">);</span></p>
  <p class="code"> </span></p>
</div>
<p>the following are valid calls (assuming <code>length</code>, <code>direction, x </code> and <code>y</code> have all been properly declared and that <code>x</code> and <code>y</code> have been set to valid values). </p>
<div class="syntaxDef">
  <p class="code"><span class="codeKeyword"> </span>toPolar<span class="codeRequired">(</span>1.0,1.0, length, direction<span class="codeRequired">);</span></p>
  <p class="code">swap<span class="codeRequired">(</span>x,y<span class="codeRequired">);</span></p>
  </div>
<p>The first call requests that the point located at(1.0,1.0) be converted to polar co-ordinates and that the length variable be set to the resultant magnitude and direction to the angle. The second swaps the values contained inside x and y.</p>
<p>The following</p>
<p class="code">swap<span class="codeRequired">(</span>2,3<span class="codeRequired">);</span></p>
<p>is syntactically incorrect because 2 and 3 are not variables and so can't be passed by reference. </p>
<!-- InstanceEndEditable -->
</div>
</body>
<!-- InstanceEnd --></html>

